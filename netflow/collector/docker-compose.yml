version: '3.2'

services:
  elasticsearch:
    build:
      context: elasticsearch/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - type: bind
        source: ./elasticsearch/config/elasticsearch.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        read_only: true
      - type: volume
        source: elasticsearch
        target: /usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      ELASTIC_PASSWORD: $ELASTIC_PASSWORD
      # Use single node discovery in order to disable production mode and avoid bootstrap checks
      # see https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
      discovery.type: single-node
    networks:
      - elk

  kibana:
    build:
      context: kibana/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - type: bind
        source: ./kibana/config/kibana.yml
        target: /usr/share/kibana/config/kibana.yml
        read_only: true
    ports:
      - "5601:5601"
    restart: on-failure
    networks:
      - elk
    depends_on:
      - elasticsearch

  packetbeat:
    build:
      context: beats/packetbeat/
      args:
        ELK_VERSION: $ELK_VERSION
    user: root
    cap_add:
      - NET_ADMIN
      - NET_RAW
    command: bash -c "
      chmod +x /usr/share/scripts/await.sh
      && /usr/share/scripts/await.sh -t 100 http://kibana:5601/login -- echo 'Kibana is up'
      && packetbeat setup -e
      && packetbeat -e
      "
    # https://github.com/docker/swarmkit/issues/1951
    hostname: "{{.Node.Hostname}}-packetbeat"
    restart: on-failure
    volumes:
      - type: bind
        source: ./beats/packetbeat/config/packetbeat.yml
        target: /usr/share/packetbeat/packetbeat.yml
        read_only: true
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
      - type: bind
        source: ./scripts
        target: /usr/share/scripts
    network_mode: host
    depends_on:
      - elasticsearch
      - kibana

  filebeat:
    build:
      context: beats/filebeat/
      args:
        ELK_VERSION: $ELK_VERSION
    user: root
    volumes:
      - type: bind
        source: ./beats/filebeat/config/filebeat.yml
        target: /usr/share/filebeat/filebeat.yml
        read_only: true
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
      - type: bind
        source: ./scripts
        target: /usr/share/scripts
    ports:
      - "192.168.1.50:2055:2055/udp"
    restart: on-failure
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - elk
    command: bash -c "
      chmod +x /usr/share/scripts/await.sh
      && /usr/share/scripts/await.sh -t 60 http://kibana:5601/login -- echo 'Kibana is up'
      && filebeat setup -e
      && filebeat -e
      "
    depends_on:
      - elasticsearch
      - kibana

networks:
  elk:
    driver: bridge

volumes:
  elasticsearch:
