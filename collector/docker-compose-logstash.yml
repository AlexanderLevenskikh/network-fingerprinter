version: '3.2'

services:
  elasticsearch:
    build:
      context: elasticsearch
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - type: bind
        source: ./elasticsearch/config/elasticsearch.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        read_only: true
      - type: volume
        source: elasticsearch
        target: /usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      ELASTIC_PASSWORD: $ELASTIC_PASSWORD
      # Use single node discovery in order to disable production mode and avoid bootstrap checks
      # see https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
      discovery.type: single-node
    networks:
      - elk

  kibana:
    build:
      context: kibana
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - type: bind
        source: ./kibana/config/kibana.yml
        target: /usr/share/kibana/config/kibana.yml
        read_only: true
    ports:
      - "5601:5601"
    restart: on-failure
    networks:
      - elk
    depends_on:
      - elasticsearch

  logstash:
    build:
      context: logstash
      args:
        ELK_VERSION: $LOGSTASH_VERSION
    command: bash -c "logstash -f /usr/share/logstash/pipeline/netflow.conf"
    volumes:
      - type: bind
        source: ./logstash/pipeline/netflow.conf
        target: /usr/share/logstash/pipeline/netflow.conf
        read_only: true
      - type: bind
        source: ./logstash/config/logstash.conf
        target: /usr/share/logstash/config/logstash.conf
        read_only: true
    ports:
      - "2055:2055/udp"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - elk
    depends_on:
      - elasticsearch

networks:
  elk:
    driver: bridge

volumes:
  elasticsearch:
